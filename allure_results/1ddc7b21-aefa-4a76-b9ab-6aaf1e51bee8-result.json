{"name": "Ошибка при отсутствии ID заказа", "status": "skipped", "statusDetails": {"message": "XFAIL 500 Error\n\nAssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code", "trace": "self = <test_accept_order.TestAcceptOrder object at 0x1047d1af0>, register_new_courier = <function register_new_courier.<locals>._register_new_courier at 0x10485dd00>\ngenerate_random_string = <function generate_random_string.<locals>._generate_random_string at 0x10485dc60>\nlogin_courier = <function login_courier.<locals>._login_courier at 0x10485dda0>, accept_order = <function accept_order.<locals>._accept_order at 0x10485e020>\n\n    @pytest.mark.xfail(reason=\"500 Error\")\n    @allure.title('Ошибка при отсутствии ID заказа')\n    def test_accept_order_no_order_id(self, register_new_courier, generate_random_string, login_courier, accept_order):\n        login = generate_random_string()\n        password = \"password123\"\n        first_name = \"CourierTest\"\n    \n        register_response = register_new_courier(login=login, password=password, first_name=first_name)\n        assert register_response.status_code == 201\n    \n        login_response = login_courier(login=login, password=password)\n        assert login_response.status_code == 200\n    \n        courier_id = login_response.json().get(\"id\")\n        assert courier_id is not None\n    \n        accept_response = accept_order(order_id=None, courier_id=courier_id)\n>       assert accept_response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests/test_accept_order.py:105: AssertionError"}, "start": 1728130898717, "stop": 1728130899633, "uuid": "5985b549-e99a-45db-84d0-4c9084204ad5", "historyId": "8a4df8e549a0bb438066d5335f8f3537", "testCaseId": "8a4df8e549a0bb438066d5335f8f3537", "fullName": "tests.test_accept_order.TestAcceptOrder#test_accept_order_no_order_id", "labels": [{"name": "feature", "value": "Принятие заказа"}, {"name": "tag", "value": "@pytest.mark.xfail(reason='500 Error')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_accept_order"}, {"name": "subSuite", "value": "TestAcceptOrder"}, {"name": "host", "value": "MacBook-Air-Jobanyj.local"}, {"name": "thread", "value": "5398-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_accept_order"}]}